[project]
name = "word_prediction"
version = "0.1"
description = "word_prediction service"
requires-python = ">=3.12"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 120
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
# Linting rules
select = [
    "D",   # pydocstyle
    "E",   # pycodestyle
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "I",   # isort
    "W",   # warnings
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in `__init__`
    "D415"  # First line should end with a period, question mark, or exclamation point
]

# Allow fix for all enabled rules
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Task tags
task-tags = ["TODO", "FIXME"]

# isort settings
[tool.ruff.lint.isort]
known-first-party = ["word_prediction_service"]

# pydocstyle settings
[tool.ruff.lint.pydocstyle]
convention = "google"

# Format settings
[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 120
quote-style = "single"
indent-style = "space"
line-ending = "lf"
skip-magic-trailing-comma = false
